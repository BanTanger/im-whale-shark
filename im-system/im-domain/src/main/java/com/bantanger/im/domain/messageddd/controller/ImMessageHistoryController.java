// --- Auto Generated by BanTanger ---
// --- Welcome to im-whale-shark ! ---
//
package com.bantanger.im.domain.messageddd.controller;

import com.bantanger.common.enums.CodeEnum;
import com.bantanger.common.model.JsonObject;
import com.bantanger.common.model.PageRequestWrapper;
import com.bantanger.common.model.PageResult;
import com.bantanger.im.domain.messageddd.creator.ImMessageHistoryCreator;
import com.bantanger.im.domain.messageddd.mapper.ImMessageHistoryMapper;
import com.bantanger.im.domain.messageddd.query.ImMessageHistoryQuery;
import com.bantanger.im.domain.messageddd.request.ImMessageHistoryCreateRequest;
import com.bantanger.im.domain.messageddd.request.ImMessageHistoryQueryRequest;
import com.bantanger.im.domain.messageddd.request.ImMessageHistoryUpdateRequest;
import com.bantanger.im.domain.messageddd.response.ImMessageHistoryResponse;
import com.bantanger.im.domain.messageddd.service.ImMessageHistoryService;
import com.bantanger.im.domain.messageddd.updater.ImMessageHistoryUpdater;
import com.bantanger.im.domain.messageddd.vo.ImMessageHistoryVO;
import java.lang.Long;
import java.lang.String;
import java.util.stream.Collectors;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@Slf4j
@RequestMapping("imMessageHistory/v1/")
@RequiredArgsConstructor
public class ImMessageHistoryController {
   private final ImMessageHistoryService imMessageHistoryService;

   /**
    * createRequest
    */
   @PostMapping("createImMessageHistory")
   public JsonObject<Long> createImMessageHistory(
         @RequestBody ImMessageHistoryCreateRequest request) {
      ImMessageHistoryCreator creator = ImMessageHistoryMapper.INSTANCE.request2Dto(request);
      return JsonObject.success(imMessageHistoryService.createImMessageHistory(creator));
   }

   /**
    * update request
    */
   @PostMapping("updateImMessageHistory")
   public JsonObject<String> updateImMessageHistory(
         @RequestBody ImMessageHistoryUpdateRequest request) {
      ImMessageHistoryUpdater updater = ImMessageHistoryMapper.INSTANCE.request2Updater(request);
      imMessageHistoryService.updateImMessageHistory(updater);
      return JsonObject.success(CodeEnum.Success.getName());
   }

   /**
    * valid
    */
   @PostMapping("valid/{id}")
   public JsonObject<String> validImMessageHistory(@PathVariable Long id) {
      imMessageHistoryService.validImMessageHistory(id);
      return JsonObject.success(CodeEnum.Success.getName());
   }

   /**
    * invalid
    */
   @PostMapping("invalid/{id}")
   public JsonObject<String> invalidImMessageHistory(@PathVariable Long id) {
      imMessageHistoryService.invalidImMessageHistory(id);
      return JsonObject.success(CodeEnum.Success.getName());
   }

   /**
    * findById
    */
   @GetMapping("findById/{id}")
   public JsonObject<ImMessageHistoryResponse> findById(@PathVariable Long id) {
      ImMessageHistoryVO vo = imMessageHistoryService.findById(id);
      ImMessageHistoryResponse response = ImMessageHistoryMapper.INSTANCE.vo2CustomResponse(vo);
      return JsonObject.success(response);
   }

   /**
    * findByPage request
    */
   @PostMapping("findByPage")
   public JsonObject<PageResult<ImMessageHistoryResponse>> findByPage(
         @RequestBody PageRequestWrapper<ImMessageHistoryQueryRequest> request) {
      PageRequestWrapper<ImMessageHistoryQuery> wrapper = new PageRequestWrapper<>();
      wrapper.setBean(ImMessageHistoryMapper.INSTANCE.request2Query(request.getBean()));
      wrapper.setSorts(request.getSorts());
          wrapper.setPageSize(request.getPageSize());
          wrapper.setPage(request.getPage());
      Page<ImMessageHistoryVO> page = imMessageHistoryService.findByPage(wrapper);
      return JsonObject.success(
              PageResult.of(
                  page.getContent().stream()
                      .map(vo -> ImMessageHistoryMapper.INSTANCE.vo2CustomResponse(vo))
                      .collect(Collectors.toList()),
                  page.getTotalElements(),
                  page.getSize(),
                  page.getNumber())
          );
   }
}

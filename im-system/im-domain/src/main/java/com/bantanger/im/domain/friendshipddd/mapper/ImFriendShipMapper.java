// --- Auto Generated by BanTanger ---
// --- Welcome to im-whale-shark ! ---
//
package com.bantanger.im.domain.friendshipddd.mapper;

import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.im.common.CustomMapper;
import com.bantanger.im.domain.friendshipddd.ImFriendShip;
import com.bantanger.im.domain.friendshipddd.creator.ImFriendShipCreator;
import com.bantanger.im.domain.friendshipddd.query.ImFriendShipQuery;
import com.bantanger.im.domain.friendshipddd.request.ImFriendShipCreateRequest;
import com.bantanger.im.domain.friendshipddd.request.ImFriendShipQueryRequest;
import com.bantanger.im.domain.friendshipddd.request.ImFriendShipUpdateRequest;
import com.bantanger.im.domain.friendshipddd.response.ImFriendShipResponse;
import com.bantanger.im.domain.friendshipddd.updater.ImFriendShipUpdater;
import com.bantanger.im.domain.friendshipddd.vo.ImFriendShipVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
      uses = {
            GenericEnumMapper.class,
            DateMapper.class,
            CustomMapper.class
      }
)
public interface ImFriendShipMapper {
   ImFriendShipMapper INSTANCE = Mappers.getMapper(ImFriendShipMapper.class);

   ImFriendShip dtoToEntity(ImFriendShipCreator dto);

   ImFriendShipUpdater request2Updater(ImFriendShipUpdateRequest request);

   ImFriendShipCreator request2Dto(ImFriendShipCreateRequest request);

   ImFriendShipQuery request2Query(ImFriendShipQueryRequest request);

   ImFriendShipResponse vo2Response(ImFriendShipVO vo);

   default ImFriendShipResponse vo2CustomResponse(ImFriendShipVO vo) {
      ImFriendShipResponse response = vo2Response(vo);
      return response;
   }
}

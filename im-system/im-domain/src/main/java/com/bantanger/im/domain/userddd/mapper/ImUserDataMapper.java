// --- Auto Generated by BanTanger ---
// --- Welcome to im-whale-shark ! ---
//
package com.bantanger.im.domain.userddd.mapper;

import com.bantanger.common.mapper.DateMapper;
import com.bantanger.common.mapper.GenericEnumMapper;
import com.bantanger.im.common.CustomMapper;
import com.bantanger.im.domain.userddd.ImUserData;
import com.bantanger.im.domain.userddd.creator.ImUserDataCreator;
import com.bantanger.im.domain.userddd.query.ImUserDataQuery;
import com.bantanger.im.domain.userddd.request.ImUserDataCreateRequest;
import com.bantanger.im.domain.userddd.request.ImUserDataQueryRequest;
import com.bantanger.im.domain.userddd.request.ImUserDataUpdateRequest;
import com.bantanger.im.domain.userddd.response.ImUserDataResponse;
import com.bantanger.im.domain.userddd.updater.ImUserDataUpdater;
import com.bantanger.im.domain.userddd.vo.ImUserDataVO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(
    uses = {
        GenericEnumMapper.class,
        DateMapper.class,
        CustomMapper.class
    }
)
public interface ImUserDataMapper {

    ImUserDataMapper INSTANCE = Mappers.getMapper(ImUserDataMapper.class);

    ImUserData dtoToEntity(ImUserDataCreator dto);

    ImUserDataUpdater request2Updater(ImUserDataUpdateRequest request);

    ImUserDataCreator request2Dto(ImUserDataCreateRequest request);

    ImUserDataQuery request2Query(ImUserDataQueryRequest request);

    ImUserDataResponse vo2Response(ImUserDataVO vo);

    default ImUserDataResponse vo2CustomResponse(ImUserDataVO vo) {
        ImUserDataResponse response = vo2Response(vo);
        return response;
    }
}
